<?xml version="1.0" encoding="UTF-8" ?>

<!--
scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration debug="false" scan="true" scanPeriod="60 seconds">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="/data/rfplatform/logs/calibration/"/>

    <!--Appender配置参考：https://logback.qos.ch/manual/appenders.html-->
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 日志文件输出 -->
    <!--<appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--<File>${log.base}/${log.moduleName}.log-->
        <!--</File>&lt;!&ndash; 设置日志不超过${log.max.size}时的保存路径，注意如果 是web项目会保存到Tomcat的bin目录 下 &ndash;&gt;-->
        <!--&lt;!&ndash; 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件。&ndash;&gt;-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--<FileNamePattern>${log.base}/archive/${log.moduleName}_all_%d{yyyy-MM-dd}.%i.log.zip-->
            <!--</FileNamePattern>-->
            <!--&lt;!&ndash; 当天的日志大小 超过${log.max.size}时,压缩日志并保存 &ndash;&gt;-->
            <!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
                <!--<maxFileSize>${log.max.size}</maxFileSize>-->
            <!--</timeBasedFileNamingAndTriggeringPolicy>-->
            <!--<maxHistory>${log.max.history}</maxHistory>-->
        <!--</rollingPolicy>-->
        <!--&lt;!&ndash; 日志输出的文件的格式  &ndash;&gt;-->
        <!--<layout class="ch.qos.logback.classic.PatternLayout">-->
            <!--<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread]%logger{56}.%method\(\):%L -%msg%n</pattern>-->
        <!--</layout>-->
    <!--</appender>-->


    <!--配置参考：https://www.cnblogs.com/zhongzheng123/p/6972485.html-->
    <!-- 按照每天生成日志文件 -->
    <appender name="ReqLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--RollingPolicy is responsible for the rollover procedure which involves file moving and renaming.-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <fileNamePattern>${LOG_HOME}/reqlog/reqlog.log.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--日志文件保留天数-->
            <!--<maxFileSize>100MB</maxFileSize>-->
            <maxHistory>7</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level - %msg%n</pattern>
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
        </encoder>
        <!--日志文件最大的大小-->
        <!--TriggeringPolicy implementations are responsible for instructing the RollingFileAppender when to rollover.-->
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
        <!--<MaxFileSize>10MB</MaxFileSize>-->
        <!--</triggeringPolicy>-->
    </appender>

    <!-- EMQ log -->
    <appender name="EmqLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/emqlog/emq.log.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--<maxFileSize>100MB</maxFileSize>-->
            <maxHistory>7</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- SYS log -->
    <appender name="SysLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/syslog/syslog.log.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--<maxFileSize>100MB</maxFileSize>-->
            <maxHistory>7</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- ThreadPool log -->
    <appender name="ThreadPoolLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/threadlog/thread.log.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--<maxFileSize>100MB</maxFileSize>-->
            <maxHistory>7</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--&lt;!&ndash; show parameters for hibernate sql 专为 Hibernate 定制 &ndash;&gt;-->
    <!--<logger name="org.hibernate.type.descriptor.sql.BasicBinder"  level="TRACE" />-->
    <!--<logger name="org.hibernate.type.descriptor.sql.BasicExtractor"  level="DEBUG" />-->
    <!--<logger name="org.hibernate.SQL" level="DEBUG" />-->
    <!--<logger name="org.hibernate.engine.QueryParameters" level="DEBUG" />-->
    <!--<logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG" />-->

    <!--&lt;!&ndash;myibatis log configure&ndash;&gt;-->
    <!--<logger name="com.apache.ibatis" level="TRACE"/>-->
    <!--<logger name="java.sql.Connection" level="DEBUG"/>-->
    <!--<logger name="java.sql.Statement" level="DEBUG"/>-->
    <!--<logger name="java.sql.PreparedStatement" level="DEBUG"/>-->

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="SysLOG"/>
        <appender-ref ref="STDOUT"/>
    </root>

    <!--&lt;!&ndash;日志异步到数据库 &ndash;&gt;-->
    <!--<appender name="DB" class="ch.qos.logback.classic.db.DBAppender">-->
    <!--&lt;!&ndash;日志异步到数据库 &ndash;&gt;-->
    <!--<connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">-->
    <!--&lt;!&ndash;连接池 &ndash;&gt;-->
    <!--<dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
    <!--<driverClass>com.mysql.jdbc.Driver</driverClass>-->
    <!--<url>jdbc:mysql://127.0.0.1:3306/databaseName</url>-->
    <!--<user>root</user>-->
    <!--<password>root</password>-->
    <!--</dataSource>-->
    <!--</connectionSource>-->
    <!--</appender>-->

    <!-- 测试环境+开发环境. 多个使用逗号隔开. -->
    <springProfile name="test,dev">
        <logger name="com.ruifeng.calibration.common.aspect.LogAspect" level="DEBUG" additivity="false">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="ReqLOG"/>
        </logger>
        <logger name="emqlog" level="INFO" additivity="false">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="EmqLOG"/>
        </logger>
        <logger name="syslog" level="INFO" additivity="false">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="SysLOG"/>
        </logger>
        <logger name="threadpoollog" level="INFO" additivity="false">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="ThreadPoolLOG"/>
        </logger>
    </springProfile>

    <!-- 生产环境. -->
    <springProfile name="prod">
        <!--请求日志-->
        <logger name="com.ruifeng.calibration.common.aspect.LogAspect" level="INFO" additivity="false">
            <appender-ref ref="ReqLOG"/>
        </logger>
        <!--EMQ-->
        <logger name="emqlog" level="INFO" additivity="false">
            <appender-ref ref="EmqLOG"/>
        </logger>
        <!--系统日志-->
        <logger name="syslog" level="INFO" additivity="false">
            <appender-ref ref="SysLOG"/>
        </logger>
        <!--线程池日志-->
        <logger name="threadpoollog" level="INFO" additivity="false">
            <appender-ref ref="ThreadPoolLOG"/>
        </logger>
    </springProfile>

</configuration>